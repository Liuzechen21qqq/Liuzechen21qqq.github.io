<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>a</title>
    <link href="/2025/03/28/a/"/>
    <url>/2025/03/28/a/</url>
    
    <content type="html"><![CDATA[<h3 id="关山难越，谁悲失路之人？"><a href="#关山难越，谁悲失路之人？" class="headerlink" title="关山难越，谁悲失路之人？"></a>关山难越，谁悲失路之人？</h3><p>我还是没有办法平静下来，这一切都让我无法接受。<br>呼吸如此沉重，甚至一句话都不想说。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ds代码</title>
    <link href="/2025/03/28/ds%E4%BB%A3%E7%A0%81/"/>
    <url>/2025/03/28/ds%E4%BB%A3%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h3 id="binary-search"><a href="#binary-search" class="headerlink" title="binary_search"></a>binary_search</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">binary_search</span><span class="hljs-params">(SqList L, Elemtype key)</span>&#123;<br>    <span class="hljs-type">int</span> low = <span class="hljs-number">0</span>; <span class="hljs-type">int</span> high = L.lentgh<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">while</span>(low &lt;= high)&#123;<br>        <span class="hljs-type">int</span> mid = (low + high) / <span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">if</span>(L.data[mid] == key)&#123;<br>            <span class="hljs-keyword">return</span> mid;<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(L.data[mid] &gt; key)&#123;<br>            high = mid - <span class="hljs-number">1</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            low = mid + <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Data Structure</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>随笔</title>
    <link href="/2025/03/28/%E9%9A%8F%E7%AC%94/"/>
    <url>/2025/03/28/%E9%9A%8F%E7%AC%94/</url>
    
    <content type="html"><![CDATA[<h2 id="失败者的独白"><a href="#失败者的独白" class="headerlink" title="失败者的独白"></a>失败者的独白</h2><p>今天是2025年3月28了，这两天我辗转反侧，无法入眠。</p><p>两天前的下午，人工智能学院的录取名单出来了，一起报考的群友在网络上地诉说着自己的喜悦。而我从头到尾翻了几遍名单，一个一个对照着名字，最后还是没有看到我想要的那一份答案。</p><p>也许我应该找个地方发泄自己的情绪，找到一处没人的地方大哭一场。我漫无目的地走着，从教室走到操场……</p><p>这是我考研期间走过的最多的一段路。暑假的时候，学校正在施工，从这条路可以去南师吃饭，可以去那个百家超市买东西，可以去虎踞路的瑞幸买一杯咖啡，然后回来之后又去操场旁边的快递站取新买的考研资料。在9点图书馆闭馆后，我也会在这条路上闲逛，多么惬意，走着、停着，幻想着成功“上岸”的未来。</p><p>我喜欢下雨，恰好那个假期下了很多场大雨。我喜欢在雨天漫步，贪婪地呼吸新鲜空气，享受着雨水带给我的清凉，这能让我感觉到异常轻松与平静。在这段时间，我已经想好要报考中科大了，这时的我没有考虑过什么难度，没有考虑失败会给我带来什么，但是最让我想不到的是现在这个颓废的我。</p><p>原来我的内心是这么脆弱，尽管我表现的不在乎，尽管我一直说着“从没想过第一次就成功”，但是当我真正地直面这种失败，我还是崩溃了。<br>我说不清楚那是什么感觉，鼻子很酸，想哭却又没有眼泪、不知不觉地走神，不知道在想着什么。我感觉呼吸不上来了，头好痛。</p><p>有一点是一定的，那就是我不会降低自己的目标。我还有再考一年的勇气，我不会去认真考虑如何面对再一次的失败，这会让我优柔寡断。我宁可死在追梦的旅途中，也不愿意苟活在碌碌无为的生活里。</p><p>目前，我是一个失败者，各个方面，各种意义上的失败者。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ustc机试</title>
    <link href="/2025/03/17/ustc%E6%9C%BA%E8%AF%95/"/>
    <url>/2025/03/17/ustc%E6%9C%BA%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="二维数组在内存中的空间地址连续"><a href="#二维数组在内存中的空间地址连续" class="headerlink" title="二维数组在内存中的空间地址连续"></a>二维数组在内存中的空间地址连续</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">test_array</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> array[<span class="hljs-number">2</span>][<span class="hljs-number">3</span>] = &#123;&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>&#125;, &#123;<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>&#125;&#125;;<br>    cout &lt;&lt; &amp;array[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] &lt;&lt; &amp;array[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>] &lt;&lt; &amp;array[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>] &lt;&lt; endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-built_in">test_array</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//binary_search</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> array[]  =&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>&#125;;<br>    <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> right = <span class="hljs-number">6</span>;<br>    <span class="hljs-type">int</span> target = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">while</span>(left&lt;=right)&#123;<br>        <span class="hljs-type">int</span> mid = left +(right-left)/<span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">if</span>(array[mid]==target)&#123;<br>            cout&lt;&lt;mid;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(array[mid]&lt;target)&#123;<br>            left = mid<span class="hljs-number">+1</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            right = mid<span class="hljs-number">-1</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//原地移除数组中所有等于val的元素，不适用额外空间，返回移除元素后新数组以及size</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">//remove</span><br><span class="hljs-comment">//暴力</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">//remove</span><br><span class="hljs-comment">//暴力</span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">removeElement</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt; &amp;nums,<span class="hljs-type">int</span> val)</span></span>&#123;<br>    <span class="hljs-type">int</span> size = nums.<span class="hljs-built_in">size</span>();<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;i &lt; size;i++)&#123;<br>        <span class="hljs-keyword">if</span>(nums[i] == val)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = i<span class="hljs-number">+1</span>; j&lt;size;j++)&#123;<br>                nums[j<span class="hljs-number">-1</span>] = nums[j];<br>            &#125;<br>            i--;<br>            size--;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> size;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    vector&lt;<span class="hljs-type">int</span>&gt; nums = &#123;<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;;<br>    <span class="hljs-type">int</span> val = <span class="hljs-number">3</span>;<br>    cout&lt;&lt;<span class="hljs-built_in">removeElement</span>(nums,val)&lt;&lt;endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="最大公约数问题"><a href="#最大公约数问题" class="headerlink" title="最大公约数问题"></a>最大公约数问题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">gcd</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span></span>&#123;<br><span class="hljs-keyword">if</span>(b == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> a;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">gcd</span>(b,a%b);<br>&#125;<br><span class="hljs-comment">// 求最大公约数；记住star；</span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> n ;<br><span class="hljs-type">int</span> minN = <span class="hljs-number">0x3f3f3f</span>,maxN = <span class="hljs-number">-0x3f3f3f</span>;<br><span class="hljs-type">int</span> gcdN;<br>cin &gt;&gt; n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i)&#123;<br><span class="hljs-type">int</span> a;<br>cin &gt;&gt; a;<br>minN = <span class="hljs-built_in">min</span>(minN,a);<br>maxN = <span class="hljs-built_in">max</span>(maxN,a);<br>&#125;<br>gcdN = <span class="hljs-built_in">gcd</span>(minN,maxN);<br>cout &lt;&lt; minN &lt;&lt; <span class="hljs-string">&quot; &quot;</span> &lt;&lt; maxN &lt;&lt; <span class="hljs-string">&quot; &quot;</span> &lt;&lt; gcdN &lt;&lt; endl; <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//字符串反转</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><br>using namespace <span class="hljs-built_in">std</span>;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">reverseString</span><span class="hljs-params">(<span class="hljs-built_in">vector</span>&lt;<span class="hljs-type">char</span>&gt;&amp; s)</span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k = o, <span class="hljs-type">int</span> e = s.size() - <span class="hljs-number">1</span>; k &lt; e; k++, e--)&#123;<br>        swap(s[k], s[e]);<br>    &#125;<br>&#125; <br></code></pre></td></tr></table></figure><h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 十进制转换为七进制</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[])</span> </span>&#123;<br>  <span class="hljs-type">long</span> <span class="hljs-type">long</span> num;<br>  vector&lt;<span class="hljs-type">int</span>&gt; seven;<br>  cin &gt;&gt; num;<br>  <span class="hljs-keyword">while</span> (num) &#123;<br>    seven.<span class="hljs-built_in">push_back</span>(num % <span class="hljs-number">7</span>);<br>    num /= <span class="hljs-number">7</span>;<br>  &#125;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = seven.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--)<br>    cout &lt;&lt; seven[i];<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//十进制转二进制</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> n;<br>    vector&lt;<span class="hljs-type">int</span>&gt; two;<br>    cin &gt;&gt; n;<br>    <span class="hljs-keyword">while</span>(n)&#123;<br>        two.<span class="hljs-built_in">push_back</span>(n % <span class="hljs-number">2</span>);<br>        n = n / <span class="hljs-number">2</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = two.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--)&#123;<br>       cout &lt;&lt; two[i];<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//十进制转十六进制</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> n;<br>    vector&lt;<span class="hljs-type">int</span>&gt; Sixteen;<br>    cin &gt;&gt; n;<br>    <span class="hljs-keyword">while</span>(n)&#123;<br>        Sixteen.<span class="hljs-built_in">push_back</span>(n % <span class="hljs-number">16</span>);<br>        n = n / <span class="hljs-number">16</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = Sixteen.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--)&#123;<br>        <span class="hljs-keyword">if</span>(Sixteen[i] &gt;= <span class="hljs-number">10</span>)&#123;<br>            cout &lt;&lt; (<span class="hljs-type">char</span>)(Sixteen[i] - <span class="hljs-number">10</span> + <span class="hljs-string">&#x27;A&#x27;</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            cout &lt;&lt; Sixteen[i];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="fibonacci"><a href="#fibonacci" class="headerlink" title="fibonacci"></a>fibonacci</h3><h4 id="递归与非递归实现大全"><a href="#递归与非递归实现大全" class="headerlink" title="递归与非递归实现大全"></a>递归与非递归实现大全</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">fibo</span><span class="hljs-params">(<span class="hljs-type">short</span> <span class="hljs-type">int</span> n)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (n == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> (n == <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">fibo</span>(n - <span class="hljs-number">1</span>) + <span class="hljs-built_in">fibo</span>(n - <span class="hljs-number">2</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">short</span> <span class="hljs-type">int</span> n;<br>    cin &gt;&gt; n;<br>    cout &lt;&lt; <span class="hljs-built_in">fibo</span>(n);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">// fibonacci数列，输入一个整数n，输入前n项，递归实现</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">fibonacci</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (n == <span class="hljs-number">1</span> || n == <span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">fibonacci</span>(n - <span class="hljs-number">1</span>) + <span class="hljs-built_in">fibonacci</span>(n - <span class="hljs-number">2</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cout &lt;&lt; <span class="hljs-string">&quot;请输入一个整数n：&quot;</span>;<br>    cin &gt;&gt; n;<br>    cout &lt;&lt; <span class="hljs-string">&quot;前&quot;</span> &lt;&lt; n &lt;&lt; <span class="hljs-string">&quot;项为：&quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br>    &#123;<br>        cout &lt;&lt; <span class="hljs-built_in">fibonacci</span>(i) &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>    &#125;<br>    cout &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">// fibonacci数列，输入一个整数n，输入前n项，非递归实现</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin &gt;&gt; n;<br>    <span class="hljs-type">int</span> a = <span class="hljs-number">0</span>, b = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        cout &lt;&lt; a &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>        <span class="hljs-type">int</span> c = a + b;<br>        a = b;<br>        b = c;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-comment">// fibonacci数列，输入一个整数n，输出第n个数，非递归实现</span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin &gt;&gt; n;<br>    <span class="hljs-type">int</span> a = <span class="hljs-number">0</span>, b = <span class="hljs-number">1</span>, c;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; i++) &#123;<br>        c = a + b;<br>        a = b;<br>        b = c;<br>    &#125;<br>    cout &lt;&lt; c &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><h4 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">// 输入一个整数数组，升序排序，快排</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">QuickSort</span><span class="hljs-params">(<span class="hljs-type">int</span> *arr, <span class="hljs-type">int</span> left, <span class="hljs-type">int</span> right)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (left &gt;= right)<br>        <span class="hljs-keyword">return</span>;<br>    <span class="hljs-type">int</span> i = left, j = right;<br>    <span class="hljs-type">int</span> key = arr[left];<br>    <span class="hljs-keyword">while</span> (i &lt; j)<br>    &#123;<br>        <span class="hljs-keyword">while</span> (i &lt; j &amp;&amp; arr[j] &gt;= key)<br>            j--;<br>        arr[i] = arr[j];<br>        <span class="hljs-keyword">while</span> (i &lt; j &amp;&amp; arr[i] &lt;= key)<br>            i++;<br>        arr[j] = arr[i];<br>    &#125;<br>    arr[i] = key;<br>    <span class="hljs-built_in">QuickSort</span>(arr, left, i - <span class="hljs-number">1</span>);<br>    <span class="hljs-built_in">QuickSort</span>(arr, i + <span class="hljs-number">1</span>, right);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin &gt;&gt; n;<br>    <span class="hljs-type">int</span> *arr = <span class="hljs-keyword">new</span> <span class="hljs-type">int</span>[n];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        cin &gt;&gt; arr[i];<br>    <span class="hljs-built_in">QuickSort</span>(arr, <span class="hljs-number">0</span>, n - <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        cout &lt;&lt; arr[i] &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>    cout &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="反转字符串"><a href="#反转字符串" class="headerlink" title="反转字符串"></a>反转字符串</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">//编写一个字符串，将其反转并输出。</span><br><span class="hljs-comment">//例如：输入字符串&quot;hello&quot;，输出&quot;olleh&quot;。</span><br><br><span class="hljs-function">string <span class="hljs-title">reverseString</span><span class="hljs-params">(string s)</span> </span>&#123;<br>    <span class="hljs-type">int</span> len = s.<span class="hljs-built_in">size</span>();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; len / <span class="hljs-number">2</span>; i++) &#123;<br>        <span class="hljs-built_in">swap</span>(s[i], s[len - i - <span class="hljs-number">1</span>]);<br>    &#125;<br>    <span class="hljs-keyword">return</span> s;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    string s;<br>    cin &gt;&gt; s;<br>    cout &lt;&lt; <span class="hljs-built_in">reverseString</span>(s) &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//回文字符串的判定</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">/*编写一个程序，输入一个字符串，判定其是否为回文*/</span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    string str;<br>    cin &gt;&gt; str;<br>    <span class="hljs-type">int</span> len = str.<span class="hljs-built_in">size</span>();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; len / <span class="hljs-number">2</span>; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (str[i] != str[len - i - <span class="hljs-number">1</span>])<br>        &#123;<br>            cout &lt;&lt; <span class="hljs-string">&quot;NO&quot;</span> &lt;&lt; endl;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    cout &lt;&lt; <span class="hljs-string">&quot;YES&quot;</span> &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//回文数的判定</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">/*编写一个程序，输入一个整数，判断是否为回文数*/</span><br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">isPalindrome</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(x &lt; <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    <span class="hljs-type">int</span> temp = x;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> res = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(x) &#123;<br>        res = res * <span class="hljs-number">10</span> + x % <span class="hljs-number">10</span>;<br>        x /= <span class="hljs-number">10</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res == temp;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> x;<br>    cin &gt;&gt; x;<br>    cout &lt;&lt; <span class="hljs-built_in">isPalindrome</span>(x) &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="阶乘"><a href="#阶乘" class="headerlink" title="阶乘"></a>阶乘</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br>using namespace <span class="hljs-built_in">std</span>;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; n;<br>    <span class="hljs-type">double</span> sum = <span class="hljs-number">0</span>, factor = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;=n; i++)&#123;<br>        factor /= i;<br>        sum += factor;<br>    &#125;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.4f&quot;</span>,sum);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="异或运算"><a href="#异或运算" class="headerlink" title="异或运算"></a>异或运算</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br>using namespace <span class="hljs-built_in">std</span>;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> a,b,c;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; a &gt;&gt; b;<br>    c = a ^ b;<br>    <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">64</span>;i++)&#123;<br>        ans += (c &amp; <span class="hljs-number">1</span>);<br>        c &gt;&gt;= <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; ans;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CN1</title>
    <link href="/2025/03/12/CN1/"/>
    <url>/2025/03/12/CN1/</url>
    
    <content type="html"><![CDATA[<h2 id="网络、互连网、互联网"><a href="#网络、互连网、互联网" class="headerlink" title="网络、互连网、互联网"></a>网络、互连网、互联网</h2><ul><li>网络是由若干结点和连接这些结点的链路组成</li><li>互连网:多个计算机网络互连而成，可以使用任意协议</li><li>互联网:全球最大的、开放的、由众多网络和路由器互连而成的特定的计算机网络。使用TCP&#x2F;IP族为通信规则。</li></ul>]]></content>
    
    
    <categories>
      
      <category>Computer Network</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>pointers</title>
    <link href="/2025/03/11/pointers/"/>
    <url>/2025/03/11/pointers/</url>
    
    <content type="html"><![CDATA[<h2 id="Introduction-to-pointers"><a href="#Introduction-to-pointers" class="headerlink" title="Introduction to pointers"></a>Introduction to pointers</h2><p><em><strong>int - 4 bytes</strong></em></p><p><em><strong>char - 1 byte</strong></em></p><p><em><strong>float - 4 bytes</strong></em></p><p><em><strong>double - 8 bytes</strong></em></p><hr><h3 id="pointers"><a href="#pointers" class="headerlink" title="pointers"></a>pointers</h3><p>pointers - variables that store address of another variable.</p><hr><p><img src="/2025/03/11/pointers/1.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-type">int</span> a;<br><span class="hljs-type">int</span> *p;<br>p = &amp;a;<br>a = <span class="hljs-number">5</span>;<br><span class="hljs-built_in">printf</span>(p) <span class="hljs-comment">//204</span><br><span class="hljs-built_in">printf</span>(&amp;a) <span class="hljs-comment">//204</span><br><span class="hljs-built_in">printf</span>(&amp;p) <span class="hljs-comment">//64</span><br><span class="hljs-built_in">print</span>(*p) <span class="hljs-comment">//5 ==&gt;derefrencing</span><br>*p = <span class="hljs-number">8</span> <br><span class="hljs-built_in">printf</span>(a) <span class="hljs-comment">// 8</span><br><span class="hljs-built_in">printf</span>(*p) <span class="hljs-comment">//8</span><br></code></pre></td></tr></table></figure><h3 id="working-with-pointers"><a href="#working-with-pointers" class="headerlink" title="working with pointers"></a>working with pointers</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-type">int</span> a = <span class="hljs-number">2</span>;<br><span class="hljs-type">int</span> *p;<br>p = &amp;a;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,p);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,*p);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,&amp;a); <span class="hljs-comment">//&amp;a = address of a</span><br><br>*p = <span class="hljs-number">66</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;a = %d\n&quot;</span>,a);<br><br><span class="hljs-type">int</span> b = <span class="hljs-number">20</span>;<br>*p = b; <span class="hljs-comment">//will the address in p change to point b? actually no!</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;a = %d\n&quot;</span>,a); <span class="hljs-comment">//Only modify the value of a</span><br><br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果如下，<br><img src="/2025/03/11/pointers/2.png"></p>]]></content>
    
    
    <categories>
      
      <category>C Language</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>helloworld</title>
    <link href="/2025/03/11/chelloworld/"/>
    <url>/2025/03/11/chelloworld/</url>
    
    <content type="html"><![CDATA[<h3 id="第一个程序"><a href="#第一个程序" class="headerlink" title="第一个程序"></a>第一个程序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;helloworld!&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="一些基础"><a href="#一些基础" class="headerlink" title="一些基础"></a>一些基础</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> a = <span class="hljs-number">0</span>; <span class="hljs-comment">//int = 4bytes</span><br><span class="hljs-type">float</span> b = <span class="hljs-number">3.14</span>; <span class="hljs-comment">//float = 4bytes</span><br><span class="hljs-type">char</span> c = <span class="hljs-string">&#x27;A&#x27;</span> <span class="hljs-comment">// char = 1bytes </span><br><span class="hljs-comment">//double = 8bytes</span><br><span class="hljs-comment">//bool d = true/false </span><br><br><span class="hljs-comment">// scanf 输入 scanf(&quot;%d&quot;,&amp;a)</span><br><span class="hljs-comment">// printf 输出 printf(&quot;%d&quot;,a);</span><br><br><span class="hljs-comment">//+ - * / %</span><br><span class="hljs-comment">//printf(&quot;%d&quot;,a+b); a-b a/b a*b     </span><br><span class="hljs-comment">//printf(&quot;%f&quot;a*1.0/b) </span><br><br><span class="hljs-comment">//if 判断语句</span><br><span class="hljs-keyword">if</span>(条件<span class="hljs-number">1</span>)&#123;<br>xxx(执行该语句) <br>&#125; <br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (条件<span class="hljs-number">2</span>)&#123;<br>xxx() <br>&#125; <br><span class="hljs-keyword">else</span>&#123;<br><br>&#125;<br> <br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> a = <span class="hljs-number">5</span>;<br>    <span class="hljs-type">int</span> b = <span class="hljs-number">4</span>;<br>    <span class="hljs-type">float</span> pi = <span class="hljs-number">3.14</span>;<br>    <span class="hljs-type">float</span> d;<br><br>    <span class="hljs-comment">// 修正scanf格式，读取一个float类型的d</span><br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%f&quot;</span>, &amp;d);  <span class="hljs-comment">// 读取一个浮动类型的d</span><br><br>    <span class="hljs-keyword">if</span> (a &gt; b) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &gt; %d\n&quot;</span>, a, b);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;wrong answer\n&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 比较pi（float类型）和d（float类型）</span><br>    <span class="hljs-keyword">if</span> (pi &gt; d) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%f &gt; %f&quot;</span>, pi, d);  <span class="hljs-comment">// 使用%f来输出float类型的变量</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="i-i-区别"><a href="#i-i-区别" class="headerlink" title="++i &amp;&amp; i++区别"></a>++i &amp;&amp; i++区别</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> i = <span class="hljs-number">1</span>, j = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;i++ = %d \n&quot;</span>, i++);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;++j = %d \n&quot;</span>, ++j);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">i++ = <span class="hljs-number">1</span><br>++j = <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>在CPP中，一般使用<code>++i</code>,代码性能较高。</p>]]></content>
    
    
    <categories>
      
      <category>C Language</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>DS绪论</title>
    <link href="/2025/03/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BB%AA%E8%AE%BA/"/>
    <url>/2025/03/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BB%AA%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<p><img src="/2025/03/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BB%AA%E8%AE%BA/202503102137806.png"></p>]]></content>
    
    
    <categories>
      
      <category>Data Structure</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>OS绪论</title>
    <link href="/2025/03/10/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BB%AA%E8%AE%BA/"/>
    <url>/2025/03/10/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BB%AA%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机系统概述"><a href="#计算机系统概述" class="headerlink" title="计算机系统概述"></a>计算机系统概述</h1><p><strong>程序</strong>：存放在磁盘中的可执行文件，包括指令、数据等。   </p><p><strong>任务</strong>：程序执行需要加载到内存中，并配备CPU及其他所需资源，执行中的程序便成了一个任务。</p><h2 id="操作系统的概念"><a href="#操作系统的概念" class="headerlink" title="操作系统的概念"></a>操作系统的概念</h2><p><strong>操作系统</strong> <strong>(Operating System)</strong><br>是指控制和管理整个计算机系统的硬件和软件资源，合理地组织、调度计算机的工作与资源地分配，进而为用户和其他软件提供方便接口的环境地程序集合。 </p><p><mark>OS是计算机系统中最基本地系统软件。</mark></p><h2 id="操作系统的功能与目标"><a href="#操作系统的功能与目标" class="headerlink" title="操作系统的功能与目标"></a>操作系统的功能与目标</h2><ol><li>操作系统是计算机系统资源的管理者</li><li>操作系统作为用户与计算机硬件系统之间的接口</li></ol><ul><li>命令接口<ul><li>联机命令接口</li><li>脱机命令接口</li></ul></li><li>程序接口：由一组<strong>系统调用</strong>组成</li></ul><ol start="3"><li>操作系统实现了对计算机资源的扩充</li></ol><h2 id="操作系统的特征"><a href="#操作系统的特征" class="headerlink" title="操作系统的特征"></a>操作系统的特征</h2><ol><li><mark>并发</mark></li><li><mark>共享</mark></li><li>虚拟</li><li>异步</li></ol><p><em>并发和共享是OS最基本的两个特征，二者互为存在条件。</em></p><h2 id="操作系统发展历程"><a href="#操作系统发展历程" class="headerlink" title="操作系统发展历程"></a>操作系统发展历程</h2><pre><code class=" mermaid">graph LR    A[手工阶段] --&gt; B[脱机处理]    B --&gt; C[早期批处理]    C --&gt; D[多道批处理]    D --&gt; E[分时操作系统]    E --&gt; F[实时操作系统]</code></pre><ol><li>手工阶段：独占计算机资源、资源利用率低；</li><li>脱机处理：减少了CPU的空闲时间，提高了I&#x2F;O速度；</li><li>早期批处理；</li><li>多道批处理：资源利用率高，吞吐量大；<ul><li>多道</li><li>宏观上并行</li><li>微观上串行</li></ul></li><li>分时操作系统：有交互性</li><li>及时性和可靠性强；</li></ol><pre><code class=" mermaid">graph LRF[实时操作系统] --&gt; G[网络操作系统]G[网络操作系统] --&gt; H[分布式操作系统]H[分布式操作系统] --&gt; I[个人计算机操作系统]</code></pre><h2 id="操作系统的运行环境"><a href="#操作系统的运行环境" class="headerlink" title="操作系统的运行环境"></a>操作系统的运行环境</h2><h3 id="处理器运行模式"><a href="#处理器运行模式" class="headerlink" title="处理器运行模式"></a>处理器运行模式</h3><ul><li>OS内核(kernel)程序</li><li>用户程序</li></ul><p><strong>前者是后者的管理者</strong></p><ul><li><mark>特权指令：不允许用户直接使用的指令；</mark><ul><li>I&#x2F;O</li><li>关中断</li><li>内存清零</li><li>存取用于内存保护的寄存器</li><li>修改PSW(程序状态字寄存器)</li></ul></li><li>非特权指令：允许用户直接使用的指令；</li></ul><p><strong>OS kernel</strong></p><ul><li>时钟管理</li><li>中断机制</li><li>原语<ul><li>处于OS的最底层，最接近硬件</li><li>具有原子性，只能一气呵成</li><li>程序运行时间短，调用频繁</li></ul></li><li>系统控制的数据结构及处理<ul><li>进程管理</li><li>存储器管理</li><li>设备管理</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Operating System</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>MyBlog</title>
    <link href="/2025/03/10/MyBlog/"/>
    <url>/2025/03/10/MyBlog/</url>
    
    <content type="html"><![CDATA[<p>Welcome to my blog!<br>This is also My learning logs!</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/03/10/hello-world/"/>
    <url>/2025/03/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
